{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Test Fixture Case": {
		"scope": "cpp",
		"prefix": "testf",
		"body": [
			"TEST_F(${CLIPBOARD:fixture}, ${2:test})",
			"{",
			"\t$0",
			"}",
		],
		"description": "Test Fixture Case"
	},
	"Given Invalid Arguments": {
		"scope": "cpp",
		"prefix": "testinval",
		"body": [
			"TEST_F(${1:fixture}, GivenInvalidArguments_Fails)",
			"{",
			"\t$0",
			"}",
		],
		"description": "Test Fixture Case"
	},
	"Expect That": {
		"scope": "cpp",
		"prefix": "eth",
		"body": "EXPECT_THAT(${1:value}, ${2:Eq}(${3:value}));"
	},
	"Assert That": {
		"scope": "cpp",
		"prefix": "ath",
		"body": "ASSERT_THAT(${1:value}, ${2:Eq}(${3:value}));"
	}
}
