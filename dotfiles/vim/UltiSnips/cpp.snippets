# We want to overwrite everything in parent ft.
priority -50
extends c

priority -40
extends gtest

priority -30

snippet inc "include local header" b
#include "${1:`!p snip.rv = snip.basename+".h"`}"
endsnippet

snippet Inc "include system header" b
#include <${1:iostream}>
endsnippet

snippet while "while loop" w
while (${1:condition})
{
	$0${VISUAL}
}
endsnippet

snippet do "do-while loop" w
do
{
	$0${VISUAL}
} while (${1:condition});
endsnippet

snippet cout "stdout stream" w
std::cout << $0${VISUAL} << std::endl;
endsnippet

snippet cerr "stderr stream" w
std::cerr << $0${VISUAL} << std::endl;
endsnippet

snippet clog "stdlog stream" w
std::clog << $0${VISUAL} << std::endl;
endsnippet

snippet if "if statement" b
if (${1:true})
{
	$0${VISUAL}
}
endsnippet

snippet elif "else if .. (eli)"
else if (${1:true})
{
	$0${VISUAL}
}
endsnippet

snippet else "else statement" w
else
{
	$0${VISUAL}
}
endsnippet

snippet once "Header Include Guard" b
#pragma once
endsnippet

snippet fore "For Each" b
for (${1:auto} ${2:x} : ${3:y})
{
	$0${VISUAL}
}
endsnippet

snippet for "For Loop" b
for (${1:size_t} ${2:ndx} = 0; $2 < ${3:limit}; ++$2)
{
	$0${VISUAL}
}
endsnippet

snippet forever "For Ever Loop" b
for (;;)
{
	$0${VISUAL}
}
endsnippet

snippet "((\w+)\.)?bend" "$1.begin(), $1.end()" rw
${1:`!p snip.rv = match.group(2) if match.group(1) is not None else "vector"`}.begin(), $1.end()
endsnippet

snippet dc "Doxygen Comment" b
/** \brief $0 */
endsnippet

snippet dfc "Doxygen File Comment" b
/** \file
 *
 * \brief $0 */
endsnippet

snippet "dp(io|i|o)?" "Doxygen parameter[in,out]" rw
\param`!p
if match.group(1) is None:
	snip.rv = ""
elif "i" == match.group(1):
	snip.rv = "[in]"
elif "o" == match.group(1):
	snip.rv = "[out]"
elif "io" == match.group(1):
	snip.rv = "[in,out]"` $0
endsnippet

snippet dr "Doxygen return" w
\return $0
endsnippet

snippet switch "Switch Statement" w
switch (${1:condition})
{
case $0:
	break;
default:
	break;
}
endsnippet

snippet case "Case Statement" w
case ${1:when}:
	$0
	break;
endsnippet

snippet cg "CPP Guard Begin" b
#ifdef __cplusplus
extern "C" {
#endif
endsnippet

snippet ce "CPP Guard End" b
#ifdef __cplusplus
}
#endif
endsnippet

snippet ns "namespace" b
namespace ${1:namespace} {

	$0

} // namespace $1
endsnippet

snippet noopt "No Optimization" w
__attribute__ ((optimize("-O0")))
endsnippet

snippet com "Comment" b
/* $0${VISUAL} */
endsnippet

snippet debug "Debug Printf" b
printf("%s:%d\n", __FUNCTION__, __LINE__);
endsnippet

snippet def "#define" b
#define $0${VISUAL}
endsnippet

snippet ifdef "#ifdef() -- simple" b
#ifdef ${1:DEFINITION}
$0${VISUAL}
#endif
endsnippet

snippet ifdef1 "#if defined() -- safe" b
#if defined(${1:DEFINITION}) && $1
$0${VISUAL}
#endif
endsnippet

snippet ifndef "#if not defined()" b
#ifndef ${1:DEFINITION}
$0${VISUAL}
#endif
endsnippet

snippet lic "license" b
/*
 * Copyright (c) 2018, NIO USA, Inc.  All rights reserved.
 *
 * Any use, reproduction, distribution, and/or transfer of this file is strictly
 * prohibited without the express written permission of the current copyright
 * owner.
 *
 * Any licensed derivative work must retain this notice.
 *
 */
endsnippet
